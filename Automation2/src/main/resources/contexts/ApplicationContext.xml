<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- AOP, UserServiceAspect method definition and project AOP configs -->
    <aop:config>
        <aop:pointcut id="pointcutUserServiceAll"
                      expression="execution(* com.example.automation2.service.UserService.*(..))"/>
        <aop:aspect ref="userServiceAspect">
            <aop:before method="beforeAdvice" pointcut-ref="pointcutUserServiceAll" />
            <aop:around method="aroundAdvice" pointcut-ref="pointcutUserServiceAll" />
            <aop:after-returning method="afterReturnAdvice" returning="user"
                                 pointcut-ref="pointcutUserServiceAll" />
            <aop:after-throwing method="afterThrow" throwing="exception"
                                pointcut-ref="pointcutUserServiceAll"  />
            <aop:after method="afterAdvice" pointcut-ref="pointcutUserServiceAll"   />
        </aop:aspect>
    </aop:config>
    <aop:aspectj-autoproxy proxy-target-class="true" />


    <!-- All database connector layers beans for AOP operations -->
    <bean id="userServiceAspect" class="com.example.automation2.aspect.UserServiceAspect" />
    <bean id="userDao" class="com.example.automation2.dao.UserDAO" scope="prototype" />
    <bean id="userService" class="com.example.automation2.service.UserService" scope="prototype">
        <constructor-arg name="userDAO" ref="userDao" />
    </bean>
    <mvc:annotation-driven />


    <!-- Application model classes instances for test that if Application Context works property or not -->
    <bean id="testModel2" class="com.example.automation2.model.TestModel" scope="prototype">
        <property name="arg1" value="1001" />
        <property name="arg2" value="ARG2" />
    </bean>
    <bean id="testUser" class="com.example.automation2.model.User">
        <property name="uuid" value="#{T(java.util.UUID).fromString(testUserUUID)}" />
        <property name="userName" value="UserName" />
        <property name="userEmail" value="user@gmail.com" />
        <property name="userAge" value="18" />
        <property name="active" value="true"/>
        <property name="userGender" value="Other" />
    </bean>
    <bean id="testUserUUID" class="java.lang.String" scope="prototype">
        <constructor-arg name="original" value="2ab405e4-8637-4a98-baaf-902aeb7af0bb" />
    </bean>

</beans>
